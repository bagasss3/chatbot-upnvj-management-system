// Code generated by MockGen. DO NOT EDIT.
// Source: cbupnvj/model (interfaces: StoryService)

// Package mock is a generated GoMock package.
package mock

import (
	model "cbupnvj/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStoryService is a mock of StoryService interface.
type MockStoryService struct {
	ctrl     *gomock.Controller
	recorder *MockStoryServiceMockRecorder
}

// MockStoryServiceMockRecorder is the mock recorder for MockStoryService.
type MockStoryServiceMockRecorder struct {
	mock *MockStoryService
}

// NewMockStoryService creates a new mock instance.
func NewMockStoryService(ctrl *gomock.Controller) *MockStoryService {
	mock := &MockStoryService{ctrl: ctrl}
	mock.recorder = &MockStoryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStoryService) EXPECT() *MockStoryServiceMockRecorder {
	return m.recorder
}

// CreateStory mocks base method.
func (m *MockStoryService) CreateStory(arg0 context.Context, arg1 model.CreateUpdateStoryRequest) (*model.Story, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStory", arg0, arg1)
	ret0, _ := ret[0].(*model.Story)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateStory indicates an expected call of CreateStory.
func (mr *MockStoryServiceMockRecorder) CreateStory(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStory", reflect.TypeOf((*MockStoryService)(nil).CreateStory), arg0, arg1)
}

// DeleteStory mocks base method.
func (m *MockStoryService) DeleteStory(arg0 context.Context, arg1 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStory", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteStory indicates an expected call of DeleteStory.
func (mr *MockStoryServiceMockRecorder) DeleteStory(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStory", reflect.TypeOf((*MockStoryService)(nil).DeleteStory), arg0, arg1)
}

// FindAllStory mocks base method.
func (m *MockStoryService) FindAllStory(arg0 context.Context, arg1 string) ([]*model.Story, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllStory", arg0, arg1)
	ret0, _ := ret[0].([]*model.Story)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllStory indicates an expected call of FindAllStory.
func (mr *MockStoryServiceMockRecorder) FindAllStory(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllStory", reflect.TypeOf((*MockStoryService)(nil).FindAllStory), arg0, arg1)
}

// FindStoryByID mocks base method.
func (m *MockStoryService) FindStoryByID(arg0 context.Context, arg1 string) (*model.Story, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindStoryByID", arg0, arg1)
	ret0, _ := ret[0].(*model.Story)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindStoryByID indicates an expected call of FindStoryByID.
func (mr *MockStoryServiceMockRecorder) FindStoryByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindStoryByID", reflect.TypeOf((*MockStoryService)(nil).FindStoryByID), arg0, arg1)
}

// UpdateStory mocks base method.
func (m *MockStoryService) UpdateStory(arg0 context.Context, arg1 string, arg2 model.CreateUpdateStoryRequest) (*model.Story, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStory", arg0, arg1, arg2)
	ret0, _ := ret[0].(*model.Story)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateStory indicates an expected call of UpdateStory.
func (mr *MockStoryServiceMockRecorder) UpdateStory(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStory", reflect.TypeOf((*MockStoryService)(nil).UpdateStory), arg0, arg1, arg2)
}
