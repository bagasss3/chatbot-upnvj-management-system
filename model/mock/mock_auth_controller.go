// Code generated by MockGen. DO NOT EDIT.
// Source: cbupnvj/model (interfaces: AuthController)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockAuthController is a mock of AuthController interface.
type MockAuthController struct {
	ctrl     *gomock.Controller
	recorder *MockAuthControllerMockRecorder
}

// MockAuthControllerMockRecorder is the mock recorder for MockAuthController.
type MockAuthControllerMockRecorder struct {
	mock *MockAuthController
}

// NewMockAuthController creates a new mock instance.
func NewMockAuthController(ctrl *gomock.Controller) *MockAuthController {
	mock := &MockAuthController{ctrl: ctrl}
	mock.recorder = &MockAuthControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthController) EXPECT() *MockAuthControllerMockRecorder {
	return m.recorder
}

// HandleForgotPassword mocks base method.
func (m *MockAuthController) HandleForgotPassword() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleForgotPassword")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// HandleForgotPassword indicates an expected call of HandleForgotPassword.
func (mr *MockAuthControllerMockRecorder) HandleForgotPassword() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleForgotPassword", reflect.TypeOf((*MockAuthController)(nil).HandleForgotPassword))
}

// HandleLoginByEmailAndPassword mocks base method.
func (m *MockAuthController) HandleLoginByEmailAndPassword() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleLoginByEmailAndPassword")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// HandleLoginByEmailAndPassword indicates an expected call of HandleLoginByEmailAndPassword.
func (mr *MockAuthControllerMockRecorder) HandleLoginByEmailAndPassword() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleLoginByEmailAndPassword", reflect.TypeOf((*MockAuthController)(nil).HandleLoginByEmailAndPassword))
}

// HandleRefreshToken mocks base method.
func (m *MockAuthController) HandleRefreshToken() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleRefreshToken")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// HandleRefreshToken indicates an expected call of HandleRefreshToken.
func (mr *MockAuthControllerMockRecorder) HandleRefreshToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleRefreshToken", reflect.TypeOf((*MockAuthController)(nil).HandleRefreshToken))
}
