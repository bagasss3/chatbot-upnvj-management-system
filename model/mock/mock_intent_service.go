// Code generated by MockGen. DO NOT EDIT.
// Source: cbupnvj/model (interfaces: IntentService)

// Package mock is a generated GoMock package.
package mock

import (
	model "cbupnvj/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIntentService is a mock of IntentService interface.
type MockIntentService struct {
	ctrl     *gomock.Controller
	recorder *MockIntentServiceMockRecorder
}

// MockIntentServiceMockRecorder is the mock recorder for MockIntentService.
type MockIntentServiceMockRecorder struct {
	mock *MockIntentService
}

// NewMockIntentService creates a new mock instance.
func NewMockIntentService(ctrl *gomock.Controller) *MockIntentService {
	mock := &MockIntentService{ctrl: ctrl}
	mock.recorder = &MockIntentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIntentService) EXPECT() *MockIntentServiceMockRecorder {
	return m.recorder
}

// CreateIntent mocks base method.
func (m *MockIntentService) CreateIntent(arg0 context.Context, arg1 model.CreateUpdateIntentRequest) (*model.Intent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateIntent", arg0, arg1)
	ret0, _ := ret[0].(*model.Intent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateIntent indicates an expected call of CreateIntent.
func (mr *MockIntentServiceMockRecorder) CreateIntent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIntent", reflect.TypeOf((*MockIntentService)(nil).CreateIntent), arg0, arg1)
}

// DeleteIntent mocks base method.
func (m *MockIntentService) DeleteIntent(arg0 context.Context, arg1 int64) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteIntent", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteIntent indicates an expected call of DeleteIntent.
func (mr *MockIntentServiceMockRecorder) DeleteIntent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteIntent", reflect.TypeOf((*MockIntentService)(nil).DeleteIntent), arg0, arg1)
}

// FindAllIntent mocks base method.
func (m *MockIntentService) FindAllIntent(arg0 context.Context) ([]*model.Intent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllIntent", arg0)
	ret0, _ := ret[0].([]*model.Intent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllIntent indicates an expected call of FindAllIntent.
func (mr *MockIntentServiceMockRecorder) FindAllIntent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllIntent", reflect.TypeOf((*MockIntentService)(nil).FindAllIntent), arg0)
}

// FindIntentByID mocks base method.
func (m *MockIntentService) FindIntentByID(arg0 context.Context, arg1 int64) (*model.Intent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindIntentByID", arg0, arg1)
	ret0, _ := ret[0].(*model.Intent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindIntentByID indicates an expected call of FindIntentByID.
func (mr *MockIntentServiceMockRecorder) FindIntentByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindIntentByID", reflect.TypeOf((*MockIntentService)(nil).FindIntentByID), arg0, arg1)
}

// UpdateIntent mocks base method.
func (m *MockIntentService) UpdateIntent(arg0 context.Context, arg1 int64, arg2 model.CreateUpdateIntentRequest) (*model.Intent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateIntent", arg0, arg1, arg2)
	ret0, _ := ret[0].(*model.Intent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateIntent indicates an expected call of UpdateIntent.
func (mr *MockIntentServiceMockRecorder) UpdateIntent(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateIntent", reflect.TypeOf((*MockIntentService)(nil).UpdateIntent), arg0, arg1, arg2)
}
