// Code generated by MockGen. DO NOT EDIT.
// Source: cbupnvj/model (interfaces: UserController)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockUserController is a mock of UserController interface.
type MockUserController struct {
	ctrl     *gomock.Controller
	recorder *MockUserControllerMockRecorder
}

// MockUserControllerMockRecorder is the mock recorder for MockUserController.
type MockUserControllerMockRecorder struct {
	mock *MockUserController
}

// NewMockUserController creates a new mock instance.
func NewMockUserController(ctrl *gomock.Controller) *MockUserController {
	mock := &MockUserController{ctrl: ctrl}
	mock.recorder = &MockUserControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserController) EXPECT() *MockUserControllerMockRecorder {
	return m.recorder
}

// HandleCreateAdmin mocks base method.
func (m *MockUserController) HandleCreateAdmin() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleCreateAdmin")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// HandleCreateAdmin indicates an expected call of HandleCreateAdmin.
func (mr *MockUserControllerMockRecorder) HandleCreateAdmin() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleCreateAdmin", reflect.TypeOf((*MockUserController)(nil).HandleCreateAdmin))
}

// HandleDeleteAdminByID mocks base method.
func (m *MockUserController) HandleDeleteAdminByID() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleDeleteAdminByID")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// HandleDeleteAdminByID indicates an expected call of HandleDeleteAdminByID.
func (mr *MockUserControllerMockRecorder) HandleDeleteAdminByID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleDeleteAdminByID", reflect.TypeOf((*MockUserController)(nil).HandleDeleteAdminByID))
}

// HandleFindAdminByID mocks base method.
func (m *MockUserController) HandleFindAdminByID() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleFindAdminByID")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// HandleFindAdminByID indicates an expected call of HandleFindAdminByID.
func (mr *MockUserControllerMockRecorder) HandleFindAdminByID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleFindAdminByID", reflect.TypeOf((*MockUserController)(nil).HandleFindAdminByID))
}

// HandleFindAllAdmin mocks base method.
func (m *MockUserController) HandleFindAllAdmin() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleFindAllAdmin")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// HandleFindAllAdmin indicates an expected call of HandleFindAllAdmin.
func (mr *MockUserControllerMockRecorder) HandleFindAllAdmin() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleFindAllAdmin", reflect.TypeOf((*MockUserController)(nil).HandleFindAllAdmin))
}

// HandleProfile mocks base method.
func (m *MockUserController) HandleProfile() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleProfile")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// HandleProfile indicates an expected call of HandleProfile.
func (mr *MockUserControllerMockRecorder) HandleProfile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleProfile", reflect.TypeOf((*MockUserController)(nil).HandleProfile))
}

// HandleUpdateAdmin mocks base method.
func (m *MockUserController) HandleUpdateAdmin() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleUpdateAdmin")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// HandleUpdateAdmin indicates an expected call of HandleUpdateAdmin.
func (mr *MockUserControllerMockRecorder) HandleUpdateAdmin() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleUpdateAdmin", reflect.TypeOf((*MockUserController)(nil).HandleUpdateAdmin))
}

// HandleUpdateProfile mocks base method.
func (m *MockUserController) HandleUpdateProfile() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleUpdateProfile")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// HandleUpdateProfile indicates an expected call of HandleUpdateProfile.
func (mr *MockUserControllerMockRecorder) HandleUpdateProfile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleUpdateProfile", reflect.TypeOf((*MockUserController)(nil).HandleUpdateProfile))
}
