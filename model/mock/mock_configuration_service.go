// Code generated by MockGen. DO NOT EDIT.
// Source: cbupnvj/model (interfaces: ConfigurationService)

// Package mock is a generated GoMock package.
package mock

import (
	model "cbupnvj/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigurationService is a mock of ConfigurationService interface.
type MockConfigurationService struct {
	ctrl     *gomock.Controller
	recorder *MockConfigurationServiceMockRecorder
}

// MockConfigurationServiceMockRecorder is the mock recorder for MockConfigurationService.
type MockConfigurationServiceMockRecorder struct {
	mock *MockConfigurationService
}

// NewMockConfigurationService creates a new mock instance.
func NewMockConfigurationService(ctrl *gomock.Controller) *MockConfigurationService {
	mock := &MockConfigurationService{ctrl: ctrl}
	mock.recorder = &MockConfigurationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigurationService) EXPECT() *MockConfigurationServiceMockRecorder {
	return m.recorder
}

// CreateConfiguration mocks base method.
func (m *MockConfigurationService) CreateConfiguration(arg0 context.Context, arg1 model.CreateUpdateConfigurationRequest) (*model.Configuration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*model.Configuration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConfiguration indicates an expected call of CreateConfiguration.
func (mr *MockConfigurationServiceMockRecorder) CreateConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConfiguration", reflect.TypeOf((*MockConfigurationService)(nil).CreateConfiguration), arg0, arg1)
}

// FindAllConfiguration mocks base method.
func (m *MockConfigurationService) FindAllConfiguration(arg0 context.Context) ([]*model.Configuration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllConfiguration", arg0)
	ret0, _ := ret[0].([]*model.Configuration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllConfiguration indicates an expected call of FindAllConfiguration.
func (mr *MockConfigurationServiceMockRecorder) FindAllConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllConfiguration", reflect.TypeOf((*MockConfigurationService)(nil).FindAllConfiguration), arg0)
}

// FindConfiguration mocks base method.
func (m *MockConfigurationService) FindConfiguration(arg0 context.Context, arg1 string) (*model.Configuration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*model.Configuration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindConfiguration indicates an expected call of FindConfiguration.
func (mr *MockConfigurationServiceMockRecorder) FindConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindConfiguration", reflect.TypeOf((*MockConfigurationService)(nil).FindConfiguration), arg0, arg1)
}

// UpdateConfiguration mocks base method.
func (m *MockConfigurationService) UpdateConfiguration(arg0 context.Context, arg1 string, arg2 model.CreateUpdateConfigurationRequest) (*model.Configuration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateConfiguration", arg0, arg1, arg2)
	ret0, _ := ret[0].(*model.Configuration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateConfiguration indicates an expected call of UpdateConfiguration.
func (mr *MockConfigurationServiceMockRecorder) UpdateConfiguration(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateConfiguration", reflect.TypeOf((*MockConfigurationService)(nil).UpdateConfiguration), arg0, arg1, arg2)
}
